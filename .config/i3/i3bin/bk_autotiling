#!/bin/bash

# Define a regular expression to match the output of 'xdotool getwindowfocus getwindowgeometry'
readonly ASPECT_RATIO_REGEX='([0-9]+)x([0-9]+)'

# Define a function to update the split direction based on the aspect ratio of the focused window
update_split() {
    # Get the geometry of the currently focused window
    if ! output=$(xdotool getwindowfocus getwindowgeometry); then
        echo "Failed to get window geometry" >&2
        return 1
    fi

    # If the output matches the regular expression, extract the width and height
    if [[ $output =~ $ASPECT_RATIO_REGEX ]]; then
        local WINDOW_WIDTH="${BASH_REMATCH[1]}"
        local WINDOW_HEIGHT="${BASH_REMATCH[2]}"
        
        # Determine whether to split horizontally or vertically based on the aspect ratio
        if ((WINDOW_WIDTH > WINDOW_HEIGHT)); then 
            i3-msg "split h" || echo "Failed to split horizontally" >&2
        else
            i3-msg "split v" || echo "Failed to split vertically" >&2
        fi
    fi
}

# Start a loop to monitor the active window
if ! xprop -spy -root _NET_ACTIVE_WINDOW | while read -r line; do
    echo "Failed to monitor active window" >&2
    sleep 1
done; then
    exit 1
fi

# Get the layout of the currently focused container in i3
if ! layout=$(i3-msg -t get_tree | jq -r 'recurse(.nodes[]; .nodes != null) | select(.nodes[].focused).layout'); then
    echo "Failed to get i3 layout" >&2
    exit 1
fi

# If the layout is a split layout, call the 'update_split' function to adjust the split direction
case "$layout" in
    splitv|splith)
        update_split
        ;;
    *)
        ;;
esac
